<div class="container-fluid">
  <div class="row">
    <div class="col-sm-3 col-md-2 sidebar">
      <ul class="nav nav-sidebar" margin-top=20px>
        <li class="active"><a href="/intro">Introduction <span class="sr-only">(current)</span></a></li>
        <li><a href="/basicsyntax">Basic Syntax</a></li>
        <li><a href="/basicexample">Basic Example</a></li>
        <li><a href="/api">API Integration</a></li>
        <li><a href="/interactive">Interactive Charts</a></li>
        <li><a href="/interactiveapi">Interactive API Example</a></li>
      </ul>
    </div>
    <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
      <h1 class="page-header">Introduction to Google Charts</h1>
      <p>Google Charts is an amazing API provided free of charge by Google. The API allows web 
      developers to quickly and efficiently incorporate charts into their websites. A basic pie chart
      can be added to a website with roughly 12 lines of javascript, as opposed to the countless hours
      that would be spent generating them manually.</p>
      <h2 class="sub-header">About This Guide</h2>
      <p>This guide's purpose is not to spend time teaching the basics of Google Charts. 
      <a href="https://developers.google.com/chart/interactive/docs/">Google's Guide</a> provides details
      on how to get Google Charts up and running, along with detailed explanations of all the features, options,
      and chart types.</p>
      <p>While this guide is going to provide the basic details of how to get a chart running in the first two 
      sections (hopefully more succently than Google's documentation), the guide is primarily going to focus on 
      two important areas:<p>
      <ul>
        <li><a href="/api">Charting API Data</a></li>
        <li><a href="/interactive">Creating Interactive Charts</a></li>
      </ul>
      <p>This guide will also be created using Express, Express-Handlebars, Express-Request, and Express-Async. 
      This adds further complexity beyond the client side calls the Google Chart API demonstrates. This will be 
      useful for creating server side code that can leverage databases, APIs, and other non-client side generated
      charts. Hopefully with the tools demonstrated in this guide you will be ready to create a workout dashboard,
      finance application, or maybe even a pick-up line success tracker (see example chart below).</p>
      <div id="pick_up">
      </div>
      <p><br />And just in case you wanted to see the underlying javascript for this chart... (HOW SIMPLE!)</p>
      <pre class="prettyprint lang-js linenums">
          google.charts.load('current', {packages: ['corechart']});
          google.charts.setOnLoadCallback(drawChart);

          function drawChart() {
            var data = new google.visualization.arrayToDataTable([
              ['Line', 'Percentage', {role: 'style'}],
              ['Girl, you better have a license, cuz you are driving me crazy', 5, '#990000'],
              ['If beauty were measured in seconds, you would be an hour!', 7, '#ff3333'],
              ['Are you Sweadish? cuz you are the sweetish girl I have met!', 2, '#ff9999']
            ]);

            var options = {title:'Pick Up Line Success Rate (%)',
                           width:800,
                           height:600,
                           backgroundColor: {strokeWidth:3},
                           cssClassNames: {headerCell: 'googleHeaderCell'}};

            var chart = new google.visualization.ColumnChart(document.getElementById('pick_up'));
            chart.draw(data, options);
          }
      </pre>
    </div>
  </div>
</div>
